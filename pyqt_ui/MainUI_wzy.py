# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'MainUI.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import sys
import cv2


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        self.main_window = MainWindow
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 566)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.widget = QtWidgets.QWidget(self.centralwidget)
        self.widget.setGeometry(QtCore.QRect(30, 30, 751, 321))
        self.widget.setObjectName("widget")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.widget)
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")

        self.pushButton = QtWidgets.QPushButton(self.widget)
        # self.pushButton.setObjectName("pushButton")
        self.pushButton.setText("打开相机")
        self.verticalLayout.addWidget(self.pushButton)

        self.pushButton_2 = QtWidgets.QPushButton(self.widget)
        # self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_2.setText("退出")
        self.verticalLayout.addWidget(self.pushButton_2)

        self.horizontalLayout_2.addLayout(self.verticalLayout)
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")

        self.label = QtWidgets.QLabel(self.widget)  # 定义显示视频的Label
        self.label.setFixedSize(641, 481)  # 给显示视频的Label设定固定大小641*481
        self.label.setObjectName("label")
        self.verticalLayout_2.addWidget(self.label)

        self.horizontalLayout_2.addLayout(self.verticalLayout_2)
        self.textBrowser = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser.setGeometry(QtCore.QRect(30, 370, 751, 131))
        self.textBrowser.setObjectName("textBrowser")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 24))
        self.menubar.setObjectName("menubar")
        self.menu = QtWidgets.QMenu(self.menubar)
        self.menu.setObjectName("menu")
        self.menu_2 = QtWidgets.QMenu(self.menubar)
        self.menu_2.setObjectName("menu_2")
        self.menu_3 = QtWidgets.QMenu(self.menubar)
        self.menu_3.setObjectName("menu_3")
        self.menu_4 = QtWidgets.QMenu(self.menubar)
        self.menu_4.setObjectName("menu_4")
        MainWindow.setMenuBar(self.menubar)
        self.toolBar = QtWidgets.QToolBar(MainWindow)
        self.toolBar.setObjectName("toolBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.action = QtWidgets.QAction(MainWindow)
        self.action.setObjectName("action")
        self.actionclose_session_file = QtWidgets.QAction(MainWindow)
        self.actionclose_session_file.setObjectName("actionclose_session_file")
        self.actionreload_session_file = QtWidgets.QAction(MainWindow)
        self.actionreload_session_file.setObjectName("actionreload_session_file")
        self.actionsave_recognize_result = QtWidgets.QAction(MainWindow)
        self.actionsave_recognize_result.setObjectName("actionsave_recognize_result")
        self.actionquit = QtWidgets.QAction(MainWindow)
        self.actionquit.setObjectName("actionquit")
        self.actionbuild_connection = QtWidgets.QAction(MainWindow)
        self.actionbuild_connection.setObjectName("actionbuild_connection")
        self.actionrecognize_online = QtWidgets.QAction(MainWindow)
        self.actionrecognize_online.setObjectName("actionrecognize_online")
        self.actionpreference = QtWidgets.QAction(MainWindow)
        self.actionpreference.setObjectName("actionpreference")
        self.actionclose_connect = QtWidgets.QAction(MainWindow)
        self.actionclose_connect.setObjectName("actionclose_connect")
        self.actionabout_system = QtWidgets.QAction(MainWindow)
        self.actionabout_system.setObjectName("actionabout_system")
        self.actionhelo = QtWidgets.QAction(MainWindow)
        self.actionhelo.setObjectName("actionhelo")
        self.actionstart_recognize = QtWidgets.QAction(MainWindow)
        self.actionstart_recognize.setObjectName("actionstart_recognize")
        self.actiononline_recognize = QtWidgets.QAction(MainWindow)
        self.actiononline_recognize.setObjectName("actiononline_recognize")
        self.menu.addAction(self.action)
        self.menu.addAction(self.actionclose_session_file)
        self.menu.addAction(self.actionreload_session_file)
        self.menu.addSeparator()
        self.menu.addAction(self.actionsave_recognize_result)
        self.menu.addSeparator()
        self.menu.addAction(self.actionquit)
        self.menu_2.addAction(self.actionbuild_connection)
        self.menu_2.addAction(self.actionclose_connect)
        self.menu_2.addSeparator()
        self.menu_2.addAction(self.actionrecognize_online)
        self.menu_2.addAction(self.actionpreference)
        self.menu_3.addAction(self.actionabout_system)
        self.menu_3.addAction(self.actionhelo)
        self.menu_4.addAction(self.actionstart_recognize)
        self.menu_4.addAction(self.actiononline_recognize)
        self.menubar.addAction(self.menu.menuAction())
        self.menubar.addAction(self.menu_2.menuAction())
        self.menubar.addAction(self.menu_4.menuAction())
        self.menubar.addAction(self.menu_3.menuAction())
        self.toolBar.addAction(self.action)
        self.toolBar.addAction(self.actionstart_recognize)
        self.toolBar.addAction(self.actiononline_recognize)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.timer_camera = QtCore.QTimer()  # 定义定时器，用于控制显示视频的帧率
        self.cap = cv2.VideoCapture()  # 视频流
        self.CAM_NUM = 0  # 为0时表示视频流来自笔记本内置摄像头

        self.slot_init()

    def slot_init(self):
        self.pushButton.clicked.connect(self.onClick_button_open_camera)
        self.timer_camera.timeout.connect(self.onClick_show_camera)
        self.pushButton_2.clicked.connect(self.main_window.close)

    def onClick_button_open_camera(self):
        if self.timer_camera.isActive() == False:  # 若定时器未启动
            flag = self.cap.open(self.CAM_NUM)  # 参数是0，表示打开笔记本的内置摄像头，参数是视频文件路径则打开视频
            if flag == False:  # flag表示open()成不成功
                msg = QtWidgets.QMessageBox.warning(self, 'warning', "请检查相机于电脑是否连接正确", buttons=QtWidgets.QMessageBox.Ok)
            else:
                self.timer_camera.start(30)  # 定时器开始计时30ms，结果是每过30ms从摄像头中取一帧显示
                self.pushButton.setText('关闭相机')
        else:
            self.timer_camera.stop()  # 关闭定时器
            self.cap.release()  # 释放视频流
            self.label.clear()  # 清空视频显示区域
            self.pushButton.setText('打开相机')

    def onClick_show_camera(self):
        flag, self.image = self.cap.read()  # 从视频流中读取

        show = cv2.resize(self.image, (640, 360))  # 把读到的帧的大小重新设置为 640x360
        show = cv2.cvtColor(show, cv2.COLOR_BGR2RGB)  # 视频色彩转换回RGB，这样才是现实的颜色
        showImage = QtGui.QImage(show.data, show.shape[1], show.shape[0],
                                 QtGui.QImage.Format_RGB888)  # 把读取到的视频数据变成QImage形式
        self.label.setPixmap(QtGui.QPixmap.fromImage(showImage))  # 往显示视频的Label里 显示QImage


    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton.setText(_translate("MainWindow", "PushButton"))
        self.pushButton_2.setText(_translate("MainWindow", "PushButton"))
        self.label.setText(_translate("MainWindow", "TextLabel"))
        self.menu.setTitle(_translate("MainWindow", "文件"))
        self.menu_2.setTitle(_translate("MainWindow", "连接"))
        self.menu_3.setTitle(_translate("MainWindow", "关于"))
        self.menu_4.setTitle(_translate("MainWindow", "识别"))
        self.toolBar.setWindowTitle(_translate("MainWindow", "toolBar"))
        self.action.setText(_translate("MainWindow", "open session file"))
        self.actionclose_session_file.setText(_translate("MainWindow", "close session file"))
        self.actionreload_session_file.setText(_translate("MainWindow", "reload session file"))
        self.actionsave_recognize_result.setText(_translate("MainWindow", "save recognize result"))
        self.actionquit.setText(_translate("MainWindow", "quit"))
        self.actionbuild_connection.setText(_translate("MainWindow", "build connection"))
        self.actionrecognize_online.setText(_translate("MainWindow", "recognize online"))
        self.actionpreference.setText(_translate("MainWindow", "preference"))
        self.actionclose_connect.setText(_translate("MainWindow", "close connect"))
        self.actionabout_system.setText(_translate("MainWindow", "about"))
        self.actionhelo.setText(_translate("MainWindow", "help"))
        self.actionstart_recognize.setText(_translate("MainWindow", "start recognize"))
        self.actiononline_recognize.setText(_translate("MainWindow", "online recognize"))


if __name__ == '__main__':
    app = QtWidgets.QApplication(sys.argv)
    main_window = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(main_window)
    main_window.show()
    sys.exit(app.exec_())
